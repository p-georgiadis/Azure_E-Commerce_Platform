# ConfigMap for shared application configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: ecommerce-config
  namespace: ecommerce-platform
  labels:
    app.kubernetes.io/name: ecommerce-platform
    app.kubernetes.io/component: config
data:
  # Application environment
  NODE_ENV: "production"
  
  # Logging configuration
  LOG_LEVEL: "info"
  LOG_FORMAT: "json"
  
  # Database configuration (non-sensitive)
  DB_POOL_MIN: "2"
  DB_POOL_MAX: "10"
  DB_TIMEOUT: "30000"
  
  # Redis configuration (non-sensitive)
  REDIS_TIMEOUT: "5000"
  REDIS_RETRY_ATTEMPTS: "3"
  
  # Service URLs (internal)
  PRODUCT_SERVICE_URL: "http://product-service:8000"
  ORDER_SERVICE_URL: "http://order-service:3000"
  PAYMENT_SERVICE_URL: "http://payment-service:5000"
  NOTIFICATION_SERVICE_URL: "http://notification-service:8080"
  
  # Application Insights (non-sensitive config)
  APPINSIGHTS_SAMPLING_PERCENTAGE: "100"
  APPINSIGHTS_DISABLE_ALL_EXTENDED_TRACING: "false"
  
  # Service Bus configuration (non-sensitive)
  SERVICE_BUS_MAX_CONCURRENT_CALLS: "10"
  SERVICE_BUS_MAX_AUTO_RENEW_DURATION: "300000"
  
  # CORS configuration
  CORS_ORIGINS: "https://ecommerce-platform.azurewebsites.net,http://localhost:3000"
  
  # Rate limiting
  RATE_LIMIT_WINDOW_MS: "900000"
  RATE_LIMIT_MAX_REQUESTS: "100"
---
# ConfigMap for Nginx configuration (Frontend service)
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: ecommerce-platform
  labels:
    app.kubernetes.io/name: frontend-service
    app.kubernetes.io/component: config
data:
  nginx.conf: |
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;
    
    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        # Log format
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log /var/log/nginx/access.log main;
        
        # Performance settings
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        server_tokens off;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;
        
        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=general:10m rate=1r/s;
        
        include /etc/nginx/conf.d/*.conf;
    }
  
  default.conf: |
    upstream api_gateway {
        server api-gateway-service:8080;
        keepalive 32;
    }
    
    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html index.htm;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 '{"status":"healthy","service":"frontend","timestamp":"$time_iso8601"}\n';
            add_header Content-Type application/json;
        }
        
        # Static files with caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
        }
        
        # API proxy to backend services
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://api_gateway;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # React app - serve index.html for all routes (SPA routing)
        location / {
            limit_req zone=general burst=10 nodelay;
            
            try_files $uri $uri/ /index.html;
            
            # Security headers for HTML content
            add_header X-Frame-Options DENY always;
            add_header X-Content-Type-Options nosniff always;
            add_header X-XSS-Protection "1; mode=block" always;
            
            # Cache control for HTML files
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        }
        
        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }